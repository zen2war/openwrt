From 90349475a6fcbf874623b5de959326059fd31e16 Mon Sep 17 00:00:00 2001
From: Alexander Egorenkov <egorenar-dev@posteo.net>
Date: Sat, 17 Apr 2021 18:51:05 +0200
Subject: [PATCH 1/3] lib: scatterlist: Fix SGL length in sg_split() if
 !CONFIG_NEED_SG_DMA_LENGTH

If CONFIG_NEED_SG_DMA_LENGTH is NOT enabled then sg_dma_len() is an alias
for the length field in a SGL. In that case sg_split() wrongly resets
the length of split SGLs to zero after it was set correctly before.

Signed-off-by: Alexander Egorenkov <egorenar-dev@posteo.net>
---
 lib/sg_split.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)

diff --git a/lib/sg_split.c b/lib/sg_split.c
index 60a0babebf2e..3d9b32084d78 100644
--- a/lib/sg_split.c
+++ b/lib/sg_split.c
@@ -92,7 +92,8 @@ static void sg_split_phys(struct sg_splitter *splitters, const int nb_splits)
 				out_sg->offset = 0;
 			}
 			sg_dma_address(out_sg) = 0;
-			sg_dma_len(out_sg) = 0;
+			if (IS_ENABLED(CONFIG_NEED_SG_DMA_LENGTH))
+				sg_dma_len(out_sg) = 0;
 			in_sg = sg_next(in_sg);
 		}
 		out_sg[-1].length = split->length_last_sg;
-- 
2.31.1

From 7be8f24bc100842fbe9e581ccf09e605199b6005 Mon Sep 17 00:00:00 2001
From: Alexander Egorenkov <egorenar-dev@posteo.net>
Date: Sun, 18 Apr 2021 16:22:59 +0200
Subject: [PATCH 2/3] lib: scatterlist: Fix loop termination condition in
 sg_calculate_split()

nb_splits was decremented one time too much becoming negative. This
leads to the failure of the loop termination conditions which checks
only for nb_splits being zero. Move the loop termination condition
a couple of lines up before nb_splits is decremented again and potentially
becomes negative.

Signed-off-by: Alexander Egorenkov <egorenar-dev@posteo.net>
---
 lib/sg_split.c | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/lib/sg_split.c b/lib/sg_split.c
index 3d9b32084d78..0920affd12ee 100644
--- a/lib/sg_split.c
+++ b/lib/sg_split.c
@@ -60,15 +60,16 @@ static int sg_calculate_split(struct scatterlist *in, int nents, int nb_splits,
 			curr->length_last_sg = len;
 			size -= len;
 		}
-		skip = 0;
-
-		if (!size && --nb_splits > 0) {
-			curr++;
-			size = *(++sizes);
-		}
 
 		if (!nb_splits)
 			break;
+
+		skip = 0;
+
+		if (!size && --nb_splits > 0) {
+			curr++;
+			size = *(++sizes);
+		}
 	}
 
 	return (size || !splitters[0].in_sg0) ? -EINVAL : 0;
-- 
2.31.1

From 83e751c70d20f402429b909f8b3dfc8b32403e5b Mon Sep 17 00:00:00 2001
From: Alexander Egorenkov <egorenar-dev@posteo.net>
Date: Sun, 18 Apr 2021 16:24:29 +0200
Subject: [PATCH 3/3] lib: scatterlist: Fix incorrect SG offset in
 sg_split_phys()

sg_split_phys() incorrectly resets the offset of all split SGLs but the
first one to 0. This is wrong because one of the original SGLs might have
the offset != 0.

Signed-off-by: Alexander Egorenkov <egorenar-dev@posteo.net>
---
 lib/sg_split.c | 2 --
 1 file changed, 2 deletions(-)

diff --git a/lib/sg_split.c b/lib/sg_split.c
index 0920affd12ee..4e91547a898d 100644
--- a/lib/sg_split.c
+++ b/lib/sg_split.c
@@ -89,8 +89,6 @@ static void sg_split_phys(struct sg_splitter *splitters, const int nb_splits)
 			if (!j) {
 				out_sg->offset += split->skip_sg0;
 				out_sg->length -= split->skip_sg0;
-			} else {
-				out_sg->offset = 0;
 			}
 			sg_dma_address(out_sg) = 0;
 			if (IS_ENABLED(CONFIG_NEED_SG_DMA_LENGTH))
-- 
2.31.1

